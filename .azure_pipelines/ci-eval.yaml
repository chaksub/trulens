trigger: none

pr:
  # Run this pipeline for any PR from a branch that starts with "releases/" that
  # changed code in trulens_eval folder or to eval notebooks in the docs folder.
  branches:
    include:
      - releases/*

# schedules:
#  - cron: "0 0 * * *"
#    displayName: Daily midnight build
#    branches:
#      include:
#        - main

jobs:
  - job: ReleaseTests
    pool:
      vmImage: "ubuntu-latest"
    timeoutInMinutes: 30

    strategy:
      matrix:
        latest:
          python-version: 3.11


    steps:
      - checkout: self
        clean: true

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python-version)'

      - bash: |
          # Install poetry
          curl -sSL https://install.python-poetry.org | python3 -

          # Show python version
          echo "Using $(python --version) ($(which python))"
          poetry config virtualenvs.create false
          poetry install --only tests --sync

          poetry run python --version
          poetry run pip --version
        displayName: Env Setup

      - bash: |
          set -e
          poetry install --only tests --sync
          make run-precommit
        condition: eq(variables['python-version'], 3.12) # only run format check with latest python version
        displayName: Format Diffs

      - bash: |
          make test-e2e-optional
        displayName: Run e2e tests
        env:
          OPENAI_API_KEY: $(OPENAI_API_KEY)
          HUGGINGFACE_API_KEY: $(HUGGINGFACE_API_KEY)
          PINECONE_API_KEY: $(PINECONE_API_KEY)
          PINECONE_ENV: $(PINECONE_ENV)
          HUGGINGFACEHUB_API_TOKEN: $(HUGGINGFACEHUB_API_TOKEN)

      - bash: |
          make test-notebook-optional
        displayName: Run notebook tests
        env:
          OPENAI_API_KEY: $(OPENAI_API_KEY)
          HUGGINGFACE_API_KEY: $(HUGGINGFACE_API_KEY)
          PINECONE_API_KEY: $(PINECONE_API_KEY)
          PINECONE_ENV: $(PINECONE_ENV)
          HUGGINGFACEHUB_API_TOKEN: $(HUGGINGFACEHUB_API_TOKEN)
