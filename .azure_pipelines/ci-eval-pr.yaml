# This a definition for azure pipelines, not github pipelines. There are
# differences between these systems.

trigger: none

pr:
  # Run this pipeline for any PR that wishes to push to main that changes code
  # inside trulens folder.
  branches:
    include:
      - main

jobs:
  - job: PRBranchProtect # name seems to be important but cannot figure out why
    pool:
      vmImage: ubuntu-latest
    timeoutInMinutes: 30

    strategy:
      matrix:
        default: # name is important
          python-version: 3.12
          tests-folder: tests/unit/*
        py309-static:
          python-version: 3.9
          tests-folder: tests/unit/static/*
        py310-static:
          python-version: 3.10
          tests-folder: tests/unit/static/*
        py311-static:
          python-version: 3.11
          tests-folder: tests/unit/static/*

    steps:
      - checkout: self
        clean: true

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python-version)'

      - bash: |
          # Install poetry
          curl -sSL https://install.python-poetry.org | python3 -

          # Show python version
          echo "Using $(python --version) ($(which python))"
          poetry config virtualenvs.create false

          # NOTE: workaround for langchain typecheck error
          # https://github.com/truera/trulens/issues/1308
          poetry run pip install pip==24.1.2

          poetry run python --version
          poetry run pip --version
        displayName: Env Setup

      - bash: |
          set -e
          poetry install --only tests --sync
          make run-precommit
        condition: eq(variables['python-version'], 3.12) # only run format check with latest python version
        displayName: Format Diffs

      - bash: |
          set -e
          make test-unit-required
        displayName: Unit Tests with Required Packages

      - bash: |
          set -e
          make test-unit-optional
        env:
          # enables optional tests, see tests/unit/test.py
          TEST_OPTIONAL: true

          # tests make use of various APIs:
          OPENAI_API_KEY: $(OPENAI_API_KEY)
          HUGGINGFACE_API_KEY: $(HUGGINGFACE_API_KEY)
          PINECONE_API_KEY: $(PINECONE_API_KEY)
          PINECONE_ENV: $(PINECONE_ENV)
          HUGGINGFACEHUB_API_TOKEN: $(HUGGINGFACEHUB_API_TOKEN)

          # some tests log into Snowflake.
          SNOWFLAKE_ACCOUNT: $(SNOWFLAKE_ACCOUNT)
          SNOWFLAKE_USER: $(SNOWFLAKE_USER)
          SNOWFLAKE_USER_PASSWORD: $(SNOWFLAKE_USER_PASSWORD)
          SNOWFLAKE_DATABASE: $(SNOWFLAKE_DATABASE)
          SNOWFLAKE_ROLE: $(SNOWFLAKE_ROLE)
          SNOWFLAKE_WAREHOUSE: $(SNOWFLAKE_WAREHOUSE)

        displayName: Unit Tests with Optional Packages
